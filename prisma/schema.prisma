// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  linkedin  String?
  github    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  jobs        JobData[]
  educations  Education[]
  experiences Experience[]
  skills      Skill[]
  logs        Log[]
}

model Education {
  id           String   @id @default(cuid())
  degree       String
  fieldOfStudy String
  institution  String
  startDate    DateTime
  endDate      DateTime
  userId       String
  user         User     @relation(fields: [userId], references: [id])
}

model Experience {
  id          String   @id @default(cuid())
  title       String
  company     String
  position    String
  description String?
  startDate   DateTime
  endDate     DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Skill {
  id     String @id @default(cuid())
  name   String
  group  String
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model JobData {
  id          String   @id @default(cuid())
  jobTitle    String
  description String
  createdAt   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])

  results    GeneratedResult[]
  interviews InterviewLog[]
}

model GeneratedResult {
  id          String   @id @default(cuid())
  cvText      String
  coverLetter String
  summary     String?
  createdAt   DateTime @default(now())
  jobDataId   String
  job         JobData  @relation(fields: [jobDataId], references: [id])
}

model Log {
  id        String   @id @default(cuid())
  action    String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model InterviewLog {
  id        String   @id @default(cuid())
  question  String
  answer    String
  createdAt DateTime @default(now())
  jobDataId String
  job       JobData  @relation(fields: [jobDataId], references: [id])
}
